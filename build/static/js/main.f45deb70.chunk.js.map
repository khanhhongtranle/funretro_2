{"version":3,"sources":["config.js","helpers/api.js","components/login.js","components/header.js","components/home.js","components/boardDetail.js","components/signup.js","components/account.js","App.js","reportWebVitals.js","index.js"],"names":["config","callAPI","action","data","callback","callbackError","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","Function","statusText","open","send","setCookie","name","val","date","Date","value","setTime","getTime","document","cookie","toUTCString","getCookie","parts","split","length","pop","shift","deleteCookie","quickCheckToken","currentURI","window","location","pathname","substr","includes","Login","useState","username","setUsername","password","setPassword","responseGoogle","response","console","log","Container","style","paddingTop","Card","padding","width","margin","className","Form","Group","controlId","Label","Control","type","placeholder","onChange","e","target","Button","onClick","params","FormData","append","res","success","token","user_id","href","alert","variant","marginLeft","to","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Header","Navbar","bg","Brand","Nav","Home","logined","boards","setBoards","boardName","setBoardName","show","setShow","handleClose","useEffect","mounted","fluid","fontSize","Row","map","board","Col","xs","marginTop","Body","Title","Text","marginRight","id","handleDelete","Link","Modal","onHide","animation","closeButton","Footer","initData","BoardDetail","props","setData","newBoardName","setNewBoardName","editingCard","setEditingCard","showEditBoardModal","setShowEditBoardModal","showEditCardModal","setShowEditCardModal","match","boardDetails","copyData","record","newCard","toString","title","description","lanes","find","col","cards","push","cardDraggable","laneDraggable","draggable","editable","onCardAdd","card","laneId","onCardDelete","cardId","onCardMoveAcrossLanes","fromLaneId","toLaneId","index","onCardClick","metadata","gotCard","backgroundColor","handleSaveBoard","newTitle","newDes","newData","lane","handleSaveCard","Signup","repassword","setrePassword","email","setEmail","firstname","setFirstName","lastname","setLastName","Account","oldPassword","setOldPassword","newPassword","setNewPassword","old_pass_not_valid","App","checkTokenValid","path","component","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f45deb70.chunk.js","sourcesContent":["export const config = {\n    \"api_url\": \"http://localhost/khanhhongtranle/funretro/api/\",//must end with slash (/),\n    \"cookie_name\": \"funretro-react\",\n    \"cookie_user_id\": \"funretro-user-id\",\n};\n","import {config} from \"../config\";\n\nexport function callAPI(action, data, callback, callbackError) {\n    const xmlHttp = new XMLHttpRequest();\n    xmlHttp.onreadystatechange = () => {\n        if (xmlHttp.readyState === 4) {\n            if (xmlHttp.status === 200) {\n                callback(JSON.parse(xmlHttp.responseText));\n            } else {\n                if (callbackError instanceof Function) {\n                    callbackError(xmlHttp.statusText);\n                }\n            }\n        }\n    };\n    xmlHttp.open('post', config.api_url + action);\n    xmlHttp.send(data);\n}\n\nexport function setCookie(name, val) {\n    const date = new Date();\n    const value = val;\n\n    // Set it expire in 30 days\n    date.setTime(date.getTime() + (30 * 24 * 60 * 60 * 1000));\n\n    // Set it\n    document.cookie = name + '=' + value + '; expires=' + date.toUTCString();\n}\n\nexport function getCookie(name) {\n    const value = '; ' + document.cookie;\n    const parts = value.split('; ' + name + '=');\n\n    if (parts.length === 2) {\n        return parts.pop().split(';').shift();\n    }\n    return null;\n}\n\nexport function deleteCookie(name) {\n    const date = new Date();\n\n    // Set it expire in -1 days\n    date.setTime(date.getTime() + (-1 * 24 * 60 * 60 * 1000));\n\n    // Set it\n    document.cookie = name + '=; expires=' + date.toUTCString();\n}\n\nexport function quickCheckToken() {\n    const currentURI = window.location.pathname.substr(1);\n    if (!['login', 'signup'].includes(currentURI)) {\n        if (!getCookie(config.cookie_name)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function checkTokenValid() {\n    const currentURI = window.location.pathname.substr(1);\n    if (!['login', 'signup'].includes(currentURI)) {\n        if (!getCookie(config.cookie_name)) {\n            window.location.href = '/login';\n        }else{\n            const params = new FormData();\n            params.append('token', getCookie(config.cookie_name));\n            callAPI('checkToken', params, function (res) {\n                if (!res.success) {\n                    window.location.href = '/login';\n                }\n            });\n        }\n    }\n}\n","import {Form, Button, Container, Card} from 'react-bootstrap';\nimport {useState} from \"react\";\nimport {callAPI, setCookie} from \"../helpers/api\";\nimport {config} from \"../config\";\nimport {Link} from \"react-router-dom\";\nimport GoogleLogin from 'react-google-login';\n\nfunction Login() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    function actionLogin() {\n        const params = new FormData();\n        params.append('username', username);\n        params.append('password', password);\n\n        callAPI('login', params, function (res) {\n            if (res.success) {\n                setCookie(config.cookie_name, res.token);\n                setCookie(config.cookie_user_id, res.user_id);\n                window.location.href = \"/\";\n            } else {\n                alert('Login failed');\n            }\n        });\n    }\n\n    const responseGoogle = (response) => {\n        console.log(response);\n    }\n\n    return (\n        <Container style={{paddingTop: \"2rem\"}}>\n            <Card style={{padding: \"1rem\", width: \"300px\", margin: \"auto\"}}>\n                <h2 className=\"text-center\">Login</h2>\n                <Form>\n                    <Form.Group controlId=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}/>\n                    </Form.Group>\n                    <Button onClick={actionLogin} variant=\"primary\" type=\"button\">Login</Button>\n                    <Link style={{marginLeft: \"20px\"}} to=\"/signup\">Sign up</Link>\n                </Form>\n            </Card>\n            <GoogleLogin\n                clientId=\"691357765421-1ei9bb6nb2c9c8tqbhtppjet1rk7m2kb.apps.googleusercontent.com\"\n                buttonText=\"Login\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={'single_host_origin'}\n            />\n        </Container>\n    );\n}\n\nexport default Login;\n","import {Navbar, Nav, Button} from \"react-bootstrap\";\nimport {deleteCookie} from \"../helpers/api\";\nimport {config} from \"../config\";\n\nfunction Header() {\n\n    function logoutHandler() {\n        deleteCookie(config.cookie_name);\n        deleteCookie(config.cookie_user_id);\n        window.location.href = \"/\";\n    }\n\n    function accountHandler(){\n        window.location.href = \"/account\";\n    }\n\n    return (\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <Navbar.Brand href=\"/\">Funretro</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Button variant=\"light\" onClick={logoutHandler}>Logout</Button>\n                    <Button onClick={accountHandler} style={{marginLeft: \"20px\"}} variant=\"outline-light\">Account</Button>\n                </Nav>\n            </Navbar>\n    );\n}\nexport default Header;\n","import {callAPI, checkTokenValid, getCookie, quickCheckToken, setCookie} from \"../helpers/api\";\nimport {BrowserRouter, Redirect, Link} from 'react-router-dom';\nimport {Container, Row, Col, Card, Navbar, Nav, Modal, Button, Form} from \"react-bootstrap\";\nimport React, {useEffect, useState} from \"react\";\nimport {config} from \"../config\";\nimport Header from \"./header\";\n\n\nfunction Home() {\n    const logined = quickCheckToken();\n    const [boards, setBoards] = useState([]);\n    const [boardName, setBoardName] = useState(\"\");\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const handleSaveBoard = (id) =>{\n        const params = new FormData();\n        params.append('board_name', boardName);\n        params.append('user_id', getCookie(config.cookie_user_id));\n        params.append('token', getCookie(config.cookie_name));\n\n        callAPI('saveBoard', params, function (res) {\n            console.log(res);\n            if (res.success) {\n                setShow(false);\n                setBoards(res.data);\n            } else {\n                alert('Failed');\n            }\n        });\n    };\n\n    const handleDelete = (id) =>{\n        const params = new FormData();\n        params.append('id', id);\n        params.append('user_id', getCookie(config.cookie_user_id));\n        params.append('token', getCookie(config.cookie_name));\n\n        callAPI('deleteBoard', params, function (res) {\n            console.log(res);\n            if (res.success) {\n                setShow(false);\n                setBoards(res.data);\n            } else {\n                alert('Failed');\n            }\n        });\n    };\n\n    useEffect(() => {\n        let mounted = true;\n\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('user_id', getCookie(config.cookie_user_id));\n\n        callAPI('getBoards', params, function (res) {\n            if (res.success) {\n                console.log(res);\n                if (mounted) {\n                    setBoards(res.data);\n                }\n            }\n        });\n\n        return () => {\n            mounted = false;\n        };\n    },[]);\n\n    if (logined) {\n        return (\n            <Container fluid>\n               <Header />\n\n               <div style={{margin:\"20px 30px\"}}>\n                   <div>\n                       <span style={{fontSize: \"30px\"}}>My Boards</span>\n                       <Button style={{fontSize: \"10px\", margin: \"10px 0 20px 30px\"}} variant=\"outline-primary\" onClick={handleShow}>New board</Button>\n                   </div>\n\n                    <Row>\n                        {boards.map( board =>\n                            <Col xs>\n                                <Card style={{ width: '18rem',marginTop:\"1rem\" }}>\n                                    <Card.Body>\n                                        <Card.Title>{board['board_name']}</Card.Title>\n                                        <Card.Text>\n                                            Date Created: {board['date_created']}\n                                        </Card.Text>\n                                        <Link to={'/detail/'+board['id']} style={{marginRight:\"10px\"}}>\n                                            <Button variant=\"link\" type=\"button\">\n                                                More\n                                            </Button>\n                                        </Link>\n                                        <Button variant=\"link\" type=\"button\" onClick={()=>handleDelete(board['id'])}>Delete</Button>\n                                        <Card.Link>\n                                            Share Link\n                                        </Card.Link>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )}\n                    </Row>\n               </div>\n\n                <Modal show={show} onHide={handleClose} animation={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Modal heading</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"boardname\">\n                            <Form.Label>Board name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Username\" onChange={e => setBoardName(e.target.value)}/>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleSaveBoard}>\n                            Add\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        );\n    } else {\n        return (<Redirect to=\"/login\"/>);\n    }\n}\n\nexport default Home;\n","import React, {useEffect, useState} from \"react\";\nimport Board from \"react-trello\";\nimport {Button, Container, Form, Modal, Row} from \"react-bootstrap\";\nimport Header from \"./header\";\nimport {callAPI, getCookie, quickCheckToken} from \"../helpers/api\";\nimport {Redirect} from \"react-router-dom\";\nimport {config} from \"../config\";\n\nconst initData = {\n    \"lanes\": [\n        {\n            \"id\": \"WENTWELL\",\n            \"title\": \"WENT WELL\",\n            \"cards\": []\n        },\n        {\n            \"id\": \"TOIMPROVE\",\n            \"title\": \"TO IMPROVE\",\n            \"cards\": []\n        },\n        {\n            \"id\": \"ACTIONITEMS\",\n            \"title\": \"ACTION ITEMS\",\n            \"cards\": []\n        }\n    ]\n}\n\n\nexport function BoardDetail(props) {\n\n    const logined = quickCheckToken();\n\n    const [data, setData] = useState(initData);\n\n    const [boardName, setBoardName] = useState(\"board name\");\n    const [newBoardName, setNewBoardName] = useState(\"\");\n\n    const [editingCard, setEditingCard] = useState({});\n\n    const [showEditBoardModal, setShowEditBoardModal] = useState(false);\n    const [showEditCardModal, setShowEditCardModal] = useState(false);\n\n    useEffect(() => {\n        let mounted = true;\n\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('board_id', props.match.params.id);\n        callAPI(\"getBoardDetail\", params, function (res) {\n            if (res.success) {\n                let boardDetails = res.data['board_details'];\n                let copyData = initData;\n                for (let record of boardDetails) {\n                    let newCard = {\n                        id: record.id.toString(),\n                        title: record.title,\n                        description: record.description,\n                    }\n                    copyData.lanes.find(col => col.id === record['type']).cards.push(newCard);\n                }\n\n                if (mounted) {\n                    setData(copyData);\n                    setBoardName(res.data['board_name']);\n                    setNewBoardName(res.data['board_name']);\n                }\n            }\n        });\n\n        return () => {\n            mounted = false\n        };\n    }, []);\n\n    function handleCardAdd(card, laneId) {\n        let params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('board_id', props.match.params.id);\n        params.append('title', card.title);\n        params.append('description', card.description);\n        params.append('type', laneId);\n        callAPI('addCard', params, res => {\n            if (res.success) {\n                console.log(1);\n            }\n        })\n    }\n\n    function handleCardDelete(cardId, laneId) {\n        let params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('card_id', cardId);\n        callAPI('deleteCard', params, res => {\n            if (res.success) {\n                console.log(1);\n            }\n        })\n    }\n\n    function handleSaveBoard() {\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('board_id', props.match.params.id);\n        params.append('board_name', newBoardName);\n\n        callAPI('editBoard', params, function (res) {\n            if (res.success) {\n                setShowEditBoardModal(false);\n                setBoardName(newBoardName);\n            }\n        });\n    }\n\n    function handleMoveCard(fromLaneId, toLaneId, cardId, index) {\n        console.log(fromLaneId);\n        console.log(toLaneId);\n        console.log(cardId);\n        console.log(index);\n    }\n\n    function handleCardClick(cardId, metadata, laneId) {\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('card_id', cardId);\n        callAPI('getCard', params, res => {\n            if (res.success && res.data.length > 0) {\n                setShowEditCardModal(true);\n                const gotCard = {\n                    id: res.data[0].id,\n                    title: res.data[0].title,\n                    description: res.data[0].description\n                };\n\n                setEditingCard(gotCard);\n            }\n        });\n    }\n\n    function handleSaveCard(cardId) {\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('card_id', cardId);\n        params.append('title', editingCard.title);\n        params.append('description', editingCard.description);\n\n        callAPI('updateCard', params, res => {\n            if (res.success) {\n                setShowEditCardModal(false);\n\n                //update board data\n                let newData = initData;\n                for (let lane of data.lanes) {\n                    for (let card of lane.cards) {\n                        if (card.id === res.data.id) {\n                            newData.lanes.find(col => col.id === lane.id).cards.push(res.data);\n                        }else{\n                            newData.lanes.find(col => col.id === lane.id).cards.push(card);\n                        }\n                    }\n                }\n                setData(newData);\n            }\n        });\n    }\n\n    function handleChangeCardTitle(newTitle) {\n        setEditingCard({\n            id: editingCard.id,\n            title: newTitle,\n            description: editingCard.description\n        });\n    }\n\n    function handleChangeCardDescription(newDes) {\n        setEditingCard({\n            id: editingCard.id,\n            title: editingCard.title,\n            description: newDes\n        });\n    }\n\n\n    if (logined) {\n        return (\n            <Container fluid>\n                <Header/>\n                <div style={{margin: \"20px 30px\"}}>\n                    <div>\n                        <span style={{fontSize: \"30px\"}}>{boardName}</span>\n                        <Button style={{margin: \"10px 0 20px 30px\"}} variant=\"link\" onClick={() => {\n                            setShowEditBoardModal(true)\n                        }}>Edit</Button>\n                        <Button style={{fontSize: \"10px\", margin: \"10px 0 20px 30px\"}} variant=\"outline-primary\">Share board</Button>\n                    </div>\n\n                    <Row>\n                        <Board\n                            cardDraggable={true}\n                            laneDraggable={false}\n                            draggable={true}\n                            editable={true}\n                            onCardAdd={handleCardAdd}\n                            onCardDelete={handleCardDelete}\n                            onCardMoveAcrossLanes={handleMoveCard}\n                            onCardClick={handleCardClick}\n                            style={{backgroundColor: 'white'}}\n                            data={data}\n                        />\n                    </Row>\n                </div>\n\n                <Modal show={showEditBoardModal} onHide={() => {\n                    setShowEditBoardModal(false)\n                }} animation={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Edit board</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"boardname\">\n                            <Form.Label>Board name</Form.Label>\n                            <Form.Control type=\"text\" value={newBoardName} onChange={e => setNewBoardName(e.target.value)}/>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => {\n                            setShowEditBoardModal(false)\n                        }}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={() => handleSaveBoard()}>\n                            Save\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={showEditCardModal} onHide={() => {\n                    setShowEditCardModal(false)\n                }} animation={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Edit card</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"cardtitle\">\n                            <Form.Label>Card title</Form.Label>\n                            <Form.Control type=\"text\" value={editingCard.title} onChange={e => {\n                                handleChangeCardTitle(e.target.value)\n                            }}/>\n                        </Form.Group>\n                        <Form.Group controlId=\"carddescription\">\n                            <Form.Label>Card description</Form.Label>\n                            <Form.Control type=\"text\" value={editingCard.description} onChange={e => {\n                                handleChangeCardDescription(e.target.value)\n                            }}/>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => {\n                            setShowEditCardModal(false)\n                        }}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={() => handleSaveCard(editingCard.id)}>\n                            Save\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        );\n    } else {\n        return (\n            <Redirect to=\"/login\"/>\n        )\n    }\n}\n","import {Form, Button, Container, Card, Col, Row} from 'react-bootstrap';\nimport {useState} from \"react\";\nimport {callAPI, setCookie} from \"../helpers/api\";\nimport {config} from \"../config\";\nimport {Link} from \"react-router-dom\";\n\nfunction Signup() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repassword, setrePassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [firstname, setFirstName] = useState(\"\");\n    const [lastname, setLastName] = useState(\"\");\n\n    function signupHandler() {\n        /**\n         * password\n         */\n        if(password!== repassword){\n            alert(\"re-password not match!\");\n            return;\n        }\n        if(username===\"\" || password===\"\" || email === \"\" || firstname===\"\" || lastname===\"\"){\n            alert(\"please input field required!\");\n            return;\n        }\n\n        const params = new FormData();\n         params.append('username', username);\n         params.append('password', password);\n         params.append('email', email);\n         params.append('firstname', firstname);\n         params.append('lastname', lastname);\n\n        callAPI('signup', params, function (res) {\n            console.log(res);\n            if (res.success) {\n                window.location.href = \"/login\";\n            } else {\n                alert('Failed');\n            }\n        });\n    }\n\n    return (\n        <Container style={{paddingTop: \"2rem\"}}>\n            <Card style={{padding: \"1rem\", width: \"600px\", margin: \"auto\"}}>\n                <h2 className=\"text-center\">Sign Up</h2>\n                <Form>\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Group controlId=\"username\">\n                                <Form.Label>Username *</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} />\n                            </Form.Group>\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Group controlId=\"password\">\n                                <Form.Label>Password *</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Group controlId=\"repassword\">\n                                <Form.Label>Re-Password *</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Re-password\" onChange={e => setrePassword(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Group controlId=\"email\">\n                                <Form.Label>Email *</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Email\" onChange={e => setEmail(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n\n\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Group controlId=\"firstname\">\n                                <Form.Label>First name *</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"First name\" onChange={e => setFirstName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Group controlId=\"lastname\">\n                                <Form.Label>Last name *</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Last name\" onChange={e => setLastName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n\n                    <Button onClick={signupHandler} variant=\"primary\" type=\"button\">Submit</Button>\n                    <Link style={{marginLeft: \"20px\"}} to=\"/login\">Login</Link>\n                </Form>\n            </Card>\n        </Container>\n    );\n}\n\nexport default Signup;\n","import {Form, Button, Container, Card, Col, Row} from 'react-bootstrap';\nimport React, {useEffect, useState} from \"react\";\nimport {callAPI, getCookie, quickCheckToken, setCookie} from \"../helpers/api\";\nimport {config} from \"../config\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport Header from \"./header\";\n\nfunction Account() {\n    const logined = quickCheckToken();\n\n    const [username, setUsername] = useState(\"\");\n    const [oldPassword, setOldPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [firstname, setFirstName] = useState(\"\");\n    const [lastname, setLastName] = useState(\"\");\n\n    useEffect(() => {\n        let mounted = true;\n\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('user_id', getCookie(config.cookie_user_id));\n\n        callAPI('getUserInfo', params, function (res) {\n            if (res.success) {\n                console.log(res);\n                if (mounted) {\n                    setUsername(res.data['username']);\n                    setEmail(res.data['email']);\n                    setFirstName(res.data['first_name']);\n                    setLastName(res.data['last_name']);\n                }\n            }\n        });\n\n        return () => {\n            mounted = false;\n        };\n    },[]);\n\n    function updateAccountHandler() {\n        if(username===\"\" || email === \"\" || firstname===\"\" || lastname===\"\"){\n            alert(\"please input field required!\");\n            return;\n        }\n\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('username', username);\n        params.append('oldPassword', oldPassword);\n        params.append('newPassword', newPassword);\n        params.append('email', email);\n        params.append('firstname', firstname);\n        params.append('lastname', lastname);\n\n        callAPI('updateUserInfo', params, function (res) {\n            console.log(res);\n            if (res.success && res.data['change_pass']) {\n                alert('Updated info and password!');\n            }else if(res.success && res.old_pass_not_valid) {\n                alert('Updated info! Old password not valid - password not change!');\n            }else if(res.success){\n                alert('Updated info!');\n            } else {\n                alert('Failed');\n            }\n        });\n    }\n    if (logined) {\n        return (\n            <Container fluid>\n            <Header />\n            <Container style={{paddingTop: \"2rem\"}}>\n                <Card style={{padding: \"1rem\", width: \"600px\", margin: \"auto\"}}>\n                    <h2 className=\"text-center\">Account infomation</h2>\n                    <Form>\n                        <Row>\n                            <Col xs={6}>\n                                <Form.Group controlId=\"username\">\n                                    <Form.Label>Username *</Form.Label><br/>\n                                    <Form.Label>{username}</Form.Label>\n                                </Form.Group>\n                            </Col>\n                            <Col xs={6}>\n                                <Form.Group controlId=\"password\">\n                                    <Form.Label>Old Password</Form.Label>\n                                    <Form.Control value={oldPassword} type=\"password\" placeholder=\"Password\" onChange={e => setOldPassword(e.target.value)}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col xs={6}>\n                                <Form.Group controlId=\"email\">\n                                    <Form.Label>Email *</Form.Label>\n                                    <Form.Control value={email} type=\"text\" placeholder=\"Email\" onChange={e => setEmail(e.target.value)}/>\n                                </Form.Group>\n                            </Col>\n                            <Col xs={6}>\n                                <Form.Group controlId=\"password\">\n                                    <Form.Label>New Password</Form.Label>\n                                    <Form.Control value={newPassword} type=\"password\" placeholder=\"Password\" onChange={e => setNewPassword(e.target.value)}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n\n                        <Row>\n                            <Col xs={6}>\n                                <Form.Group controlId=\"firstname\">\n                                    <Form.Label>First name *</Form.Label>\n                                    <Form.Control value={firstname} type=\"text\" placeholder=\"First name\" onChange={e => setFirstName(e.target.value)}/>\n                                </Form.Group>\n                            </Col>\n                            <Col xs={6}>\n                                <Form.Group controlId=\"lastname\">\n                                    <Form.Label>Last name *</Form.Label>\n                                    <Form.Control value={lastname} type=\"text\" placeholder=\"Last name\" onChange={e => setLastName(e.target.value)}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Button onClick={updateAccountHandler} variant=\"primary\" type=\"button\">Change</Button>\n                        <Link style={{marginLeft: \"20px\"}} to=\"/\">Back</Link>\n                    </Form>\n                </Card>\n            </Container>\n            </Container>\n        );\n    } else {\n        return (<Redirect to=\"/login\"/>);\n    }\n}\n\nexport default Account;\n","import Login from \"./components/login\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport {useEffect} from 'react';\nimport {checkTokenValid} from \"./helpers/api\";\nimport {BoardDetail} from \"./components/boardDetail\";\nimport Signup from \"./components/signup\";\nimport Account from \"./components/account\";\n\nfunction App() {\n    useEffect(() => {\n        checkTokenValid();\n    });\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/login\"><Login/></Route>\n                <Route path=\"/detail/:id\" component={BoardDetail} />\n                <Route path=\"/signup\" component={Signup} />\n                <Route path=\"/account\" component={Account} />\n                <Route path=\"/\"><Home/></Route>\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}