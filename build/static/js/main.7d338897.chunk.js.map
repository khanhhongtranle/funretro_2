{"version":3,"sources":["config.js","helpers/api.js","components/login.js","components/header.js","components/home.js","components/boardDetail.js","components/signup.js","components/account.js","App.js","reportWebVitals.js","index.js"],"names":["config","callAPI","action","data","callback","callbackError","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","Function","statusText","open","send","setCookie","name","val","date","Date","value","setTime","getTime","document","cookie","toUTCString","getCookie","parts","split","length","pop","shift","deleteCookie","quickCheckToken","currentURI","window","location","pathname","substr","includes","Login","useState","username","setUsername","password","setPassword","responseGoogle","response","console","log","params","FormData","append","tt","$t","gV","jT","CT","res","success","token","user_id","href","alert","Container","style","paddingTop","Card","padding","width","margin","className","Form","Group","controlId","Label","Control","type","placeholder","onChange","e","target","Row","Col","Button","onClick","variant","marginLeft","marginRight","to","clientId","buttonText","onSuccess","onFailure","cookiePolicy","appId","autoLoad","fields","Header","Navbar","bg","Brand","Nav","Home","logined","boards","setBoards","boardName","setBoardName","show","setShow","handleClose","useEffect","mounted","fluid","fontSize","map","board","xs","marginTop","Body","Title","Text","id","handleDelete","Link","Modal","onHide","animation","closeButton","Footer","initData","BoardDetail","props","setData","newBoardName","setNewBoardName","editingCard","setEditingCard","showEditBoardModal","setShowEditBoardModal","showEditCardModal","setShowEditCardModal","match","boardDetails","copyData","record","newCard","toString","title","description","lanes","find","col","cards","push","cardDraggable","laneDraggable","draggable","editable","onCardAdd","card","laneId","onCardDelete","cardId","onCardMoveAcrossLanes","fromLaneId","toLaneId","index","onCardClick","metadata","gotCard","backgroundColor","onDataChange","handleSaveBoard","newTitle","newDes","handleSaveCard","Signup","repassword","setrePassword","email","setEmail","firstname","setFirstName","lastname","setLastName","Account","oldPassword","setOldPassword","newPassword","setNewPassword","old_pass_not_valid","App","checkTokenValid","path","component","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d338897.chunk.js","sourcesContent":["export const config = {\n    \"api_url\": \"http://funretro.aramefiko.com/api/\",//must end with slash (/),\n    \"cookie_name\": \"funretro-react\",\n    \"cookie_user_id\": \"funretro-user-id\",\n    \"google_client_id\":\"817492327547-f0qhi4ed61vsjua0vaj3vgtpqnlvap68.apps.googleusercontent.com\"\n};\n","import {config} from \"../config\";\n\nexport function callAPI(action, data, callback, callbackError) {\n    const xmlHttp = new XMLHttpRequest();\n    xmlHttp.onreadystatechange = () => {\n        if (xmlHttp.readyState === 4) {\n            if (xmlHttp.status === 200) {\n                callback(JSON.parse(xmlHttp.responseText));\n            } else {\n                if (callbackError instanceof Function) {\n                    callbackError(xmlHttp.statusText);\n                }\n            }\n        }\n    };\n    xmlHttp.open('post', config.api_url + action);\n    xmlHttp.send(data);\n}\n\nexport function setCookie(name, val) {\n    const date = new Date();\n    const value = val;\n\n    // Set it expire in 30 days\n    date.setTime(date.getTime() + (30 * 24 * 60 * 60 * 1000));\n\n    // Set it\n    document.cookie = name + '=' + value + '; expires=' + date.toUTCString();\n}\n\nexport function getCookie(name) {\n    const value = '; ' + document.cookie;\n    const parts = value.split('; ' + name + '=');\n\n    if (parts.length === 2) {\n        return parts.pop().split(';').shift();\n    }\n    return null;\n}\n\nexport function deleteCookie(name) {\n    const date = new Date();\n\n    // Set it expire in -1 days\n    date.setTime(date.getTime() + (-1 * 24 * 60 * 60 * 1000));\n\n    // Set it\n    document.cookie = name + '=; expires=' + date.toUTCString();\n}\n\nexport function quickCheckToken() {\n    const currentURI = window.location.pathname.substr(1);\n    if (!['login', 'signup','loginGoogle'].includes(currentURI)) {\n        if (!getCookie(config.cookie_name)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function checkTokenValid() {\n    const currentURI = window.location.pathname.substr(1);\n    if (!['login', 'signup','loginGoogle'].includes(currentURI)) {\n        if (!getCookie(config.cookie_name)) {\n            window.location.href = '/login';\n        }else{\n            const params = new FormData();\n            params.append('token', getCookie(config.cookie_name));\n            callAPI('checkToken', params, function (res) {\n                if (!res.success) {\n                    window.location.href = '/login';\n                }\n            });\n        }\n    }\n}\n","import {Form, Button, Container, Card, Row, Col} from 'react-bootstrap';\nimport {useState} from \"react\";\nimport {callAPI, setCookie} from \"../helpers/api\";\nimport {config} from \"../config\";\nimport {Link} from \"react-router-dom\";\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\n\nfunction Login() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    function actionLogin() {\n        const params = new FormData();\n        params.append('username', username);\n        params.append('password', password);\n\n        callAPI('login', params, function (res) {\n            if (res.success) {\n                setCookie(config.cookie_name, res.token);\n                setCookie(config.cookie_user_id, res.user_id);\n                window.location.href = \"/\";\n            } else {\n                alert('Login failed');\n            }\n        });\n    }\n\n    const responseGoogle = (response) => {\n        console.log(response);\n        const params = new FormData();\n        params.append('email', response.tt.$t);\n        params.append('first_name', response.tt.gV);\n        params.append('last_name', response.tt.jT);\n        params.append('username', response.tt.CT);\n\n        callAPI('loginGoogle', params, function (res) {\n            if (res.success) {\n                setCookie(config.cookie_name, res.token);\n                setCookie(config.cookie_user_id, res.user_id);\n                window.location.href = \"/\";\n            } else {\n                alert('Login failed');\n            }\n        });\n    }\n\n    return (\n        <Container style={{paddingTop: \"2rem\"}}>\n            <Card style={{padding: \"1rem\", width: \"400px\", margin: \"auto\"}}>\n                <h2 className=\"text-center\">Login</h2>\n                <Form>\n                    <Form.Group controlId=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)}/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}/>\n                    </Form.Group>\n\n                    <Row>\n                        <Col>\n                            <Button onClick={actionLogin} variant=\"primary\" type=\"button\">Login</Button>\n                        </Col>\n                        <Col>\n                            <Link style={{marginLeft: \"20px\", marginRight: \"20px\"}} to=\"/signup\">Sign up</Link>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <GoogleLogin\n                                clientId={config.google_client_id}\n                                buttonText=\"Login\"\n                                onSuccess={responseGoogle}\n                                onFailure={responseGoogle}\n                                cookiePolicy={'single_host_origin'}\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col>\n                            <FacebookLogin\n                                appId=\"1088597931155576\"\n                                autoLoad={true}\n                                fields=\"name,email,picture\"\n                                onClick={()=>{console.log(\"Clicked!\")}}\n                                callback={() => {console.log(\"Call back!\")}} />\n                        </Col>\n                    </Row>\n                </Form>\n            </Card>\n        </Container>\n    );\n}\n\nexport default Login;\n","import {Navbar, Nav, Button} from \"react-bootstrap\";\nimport {deleteCookie} from \"../helpers/api\";\nimport {config} from \"../config\";\n\nfunction Header() {\n\n    function logoutHandler() {\n        deleteCookie(config.cookie_name);\n        deleteCookie(config.cookie_user_id);\n        window.location.href = \"/\";\n    }\n\n    function accountHandler(){\n        window.location.href = \"/account\";\n    }\n\n    return (\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <Navbar.Brand href=\"/\">Funretro</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Button variant=\"light\" onClick={logoutHandler}>Logout</Button>\n                    <Button onClick={accountHandler} style={{marginLeft: \"20px\"}} variant=\"outline-light\">Account</Button>\n                </Nav>\n            </Navbar>\n    );\n}\nexport default Header;\n","import {callAPI, checkTokenValid, getCookie, quickCheckToken, setCookie} from \"../helpers/api\";\nimport {BrowserRouter, Redirect, Link} from 'react-router-dom';\nimport {Container, Row, Col, Card, Navbar, Nav, Modal, Button, Form} from \"react-bootstrap\";\nimport React, {useEffect, useState} from \"react\";\nimport {config} from \"../config\";\nimport Header from \"./header\";\n\n\nfunction Home() {\n    const logined = quickCheckToken();\n    const [boards, setBoards] = useState([]);\n    const [boardName, setBoardName] = useState(\"\");\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const handleSaveBoard = (id) =>{\n        const params = new FormData();\n        params.append('board_name', boardName);\n        params.append('user_id', getCookie(config.cookie_user_id));\n        params.append('token', getCookie(config.cookie_name));\n\n        callAPI('saveBoard', params, function (res) {\n            console.log(res);\n            if (res.success) {\n                setShow(false);\n                setBoards(res.data);\n            } else {\n                alert('Failed');\n            }\n        });\n    };\n\n    const handleDelete = (id) =>{\n        const params = new FormData();\n        params.append('id', id);\n        params.append('user_id', getCookie(config.cookie_user_id));\n        params.append('token', getCookie(config.cookie_name));\n\n        callAPI('deleteBoard', params, function (res) {\n            console.log(res);\n            if (res.success) {\n                setShow(false);\n                setBoards(res.data);\n            } else {\n                alert('Failed');\n            }\n        });\n    };\n\n    useEffect(() => {\n        let mounted = true;\n\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('user_id', getCookie(config.cookie_user_id));\n\n        callAPI('getBoards', params, function (res) {\n            if (res.success) {\n                console.log(res);\n                if (mounted) {\n                    setBoards(res.data);\n                }\n            }\n        });\n\n        return () => {\n            mounted = false;\n        };\n    },[]);\n\n    if (logined) {\n        return (\n            <Container fluid>\n               <Header />\n\n               <div style={{margin:\"20px 30px\"}}>\n                   <div>\n                       <span style={{fontSize: \"30px\"}}>My Boards</span>\n                       <Button style={{fontSize: \"10px\", margin: \"10px 0 20px 30px\"}} variant=\"outline-primary\" onClick={handleShow}>New board</Button>\n                   </div>\n\n                    <Row>\n                        {boards.map( board =>\n                            <Col xs>\n                                <Card style={{ width: '18rem',marginTop:\"1rem\" }}>\n                                    <Card.Body>\n                                        <Card.Title>{board['board_name']}</Card.Title>\n                                        <Card.Text>\n                                            Date Created: {board['date_created']}\n                                        </Card.Text>\n                                        <Link to={'/detail/'+board['id']} style={{marginRight:\"10px\"}}>\n                                            <Button variant=\"link\" type=\"button\">\n                                                More\n                                            </Button>\n                                        </Link>\n                                        <Button variant=\"link\" type=\"button\" onClick={()=>handleDelete(board['id'])}>Delete</Button>\n                                        <Card.Link>\n                                            Share Link\n                                        </Card.Link>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )}\n                    </Row>\n               </div>\n\n                <Modal show={show} onHide={handleClose} animation={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Modal heading</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"boardname\">\n                            <Form.Label>Board name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Username\" onChange={e => setBoardName(e.target.value)}/>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleSaveBoard}>\n                            Add\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        );\n    } else {\n        return (<Redirect to=\"/login\"/>);\n    }\n}\n\nexport default Home;\n","import React, {useEffect, useState} from \"react\";\nimport Board from \"react-trello\";\nimport {Button, Container, Form, Modal, Row} from \"react-bootstrap\";\nimport Header from \"./header\";\nimport {callAPI, getCookie, quickCheckToken} from \"../helpers/api\";\nimport {Redirect} from \"react-router-dom\";\nimport {config} from \"../config\";\n\nconst initData = {\n    \"lanes\": [\n        {\n            \"id\": \"WENTWELL\",\n            \"title\": \"WENT WELL\",\n            \"cards\": []\n        },\n        {\n            \"id\": \"TOIMPROVE\",\n            \"title\": \"TO IMPROVE\",\n            \"cards\": []\n        },\n        {\n            \"id\": \"ACTIONITEMS\",\n            \"title\": \"ACTION ITEMS\",\n            \"cards\": []\n        }\n    ]\n}\n\nexport function BoardDetail(props) {\n\n    const logined = quickCheckToken();\n\n    const [data, setData] = useState(initData);\n    const [eventBus, setEventBus] = useState();\n\n    const [boardName, setBoardName] = useState(\"board name\");\n    const [newBoardName, setNewBoardName] = useState(\"\");\n\n    const [editingCard, setEditingCard] = useState({});\n\n    const [showEditBoardModal, setShowEditBoardModal] = useState(false);\n    const [showEditCardModal, setShowEditCardModal] = useState(false);\n\n    useEffect(() => {\n        let mounted = true;\n\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('board_id', props.match.params.id);\n        callAPI(\"getBoardDetail\", params, function (res) {\n            if (res.success) {\n                let boardDetails = res.data['board_details'];\n                let copyData = initData;\n                for (let record of boardDetails) {\n                    let newCard = {\n                        id: record.id.toString(),\n                        title: record.title,\n                        description: record.description,\n                    }\n                    copyData.lanes.find(col => col.id === record['type']).cards.push(newCard);\n                }\n\n                if (mounted) {\n                    setData(copyData);\n                    setBoardName(res.data['board_name']);\n                    setNewBoardName(res.data['board_name']);\n                }\n            }\n        });\n\n        return () => {\n            mounted = false\n        };\n    }, []);\n\n    function handleCardAdd(card, laneId) {\n        let params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('board_id', props.match.params.id);\n        params.append('title', card.title);\n        params.append('description', card.description);\n        params.append('type', laneId);\n        callAPI('addCard', params, res => {\n            if (res.success) {\n                console.log(1);\n            }\n        })\n    }\n\n    function handleCardDelete(cardId, laneId) {\n        let params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('card_id', cardId);\n        callAPI('deleteCard', params, res => {\n            if (res.success) {\n                console.log(1);\n            }\n        })\n    }\n\n    function handleSaveBoard() {\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('board_id', props.match.params.id);\n        params.append('board_name', newBoardName);\n\n        callAPI('editBoard', params, function (res) {\n            if (res.success) {\n                setShowEditBoardModal(false);\n                setBoardName(newBoardName);\n            }\n        });\n    }\n\n    function handleMoveCard(fromLaneId, toLaneId, cardId, index) {\n        console.log(fromLaneId);\n        console.log(toLaneId);\n        console.log(cardId);\n        console.log(index);\n    }\n\n    function handleCardClick(cardId, metadata, laneId) {\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('card_id', cardId);\n        callAPI('getCard', params, res => {\n            if (res.success && res.data.length > 0) {\n                setShowEditCardModal(true);\n                const gotCard = {\n                    id: res.data[0].id,\n                    title: res.data[0].title,\n                    description: res.data[0].description\n                };\n\n                setEditingCard(gotCard);\n            }\n        });\n    }\n\n    function handleSaveCard(cardId) {\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('card_id', cardId);\n        params.append('title', editingCard.title);\n        params.append('description', editingCard.description);\n\n        callAPI('updateCard', params, res => {\n            if (res.success) {\n\n                //update board data\n                let newData = initData;\n                // for (let lane of data.lanes) {\n                //     for (let card of lane.cards) {\n                //         if (card.id === res.data.id) {\n                //             newData.lanes.find(col => col.id === lane.id).cards.push(res.data);\n                //         }else{\n                //             newData.lanes.find(col => col.id === lane.id).cards.push(card);\n                //         }\n                //     }\n                // }\n\n            }\n            setData(initData);\n            setShowEditCardModal(false);\n\n        });\n    }\n\n    function handleChangeCardTitle(newTitle) {\n        setEditingCard({\n            id: editingCard.id,\n            title: newTitle,\n            description: editingCard.description\n        });\n    }\n\n    function handleChangeCardDescription(newDes) {\n        setEditingCard({\n            id: editingCard.id,\n            title: editingCard.title,\n            description: newDes\n        });\n    }\n\n\n\n\n    if (logined) {\n        return (\n            <Container fluid>\n                <Header/>\n                <div style={{margin: \"20px 30px\"}}>\n                    <div>\n                        <span style={{fontSize: \"30px\"}}>{boardName}</span>\n                        <Button style={{margin: \"10px 0 20px 30px\"}} variant=\"link\" onClick={() => {\n                            setShowEditBoardModal(true)\n                        }}>Edit</Button>\n                        <Button style={{fontSize: \"10px\", margin: \"10px 0 20px 30px\"}} variant=\"outline-primary\">Share board</Button>\n                    </div>\n\n                    <Row>\n                        <Board\n                            cardDraggable={true}\n                            laneDraggable={false}\n                            draggable={true}\n                            editable={true}\n                            onCardAdd={handleCardAdd}\n                            onCardDelete={handleCardDelete}\n                            onCardMoveAcrossLanes={handleMoveCard}\n                            onCardClick={handleCardClick}\n                            style={{backgroundColor: 'white'}}\n                            data={data}\n                            onDataChange={() => {console.log(data)}}\n                        />\n                    </Row>\n                </div>\n\n                <Modal show={showEditBoardModal} onHide={() => {\n                    setShowEditBoardModal(false)\n                }} animation={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Edit board</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"boardname\">\n                            <Form.Label>Board name</Form.Label>\n                            <Form.Control type=\"text\" value={newBoardName} onChange={e => setNewBoardName(e.target.value)}/>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => {\n                            setShowEditBoardModal(false)\n                        }}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={() => handleSaveBoard()}>\n                            Save\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={showEditCardModal} onHide={() => {\n                    setShowEditCardModal(false)\n                }} animation={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Edit card</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"cardtitle\">\n                            <Form.Label>Card title</Form.Label>\n                            <Form.Control type=\"text\" value={editingCard.title} onChange={e => {\n                                handleChangeCardTitle(e.target.value)\n                            }}/>\n                        </Form.Group>\n                        <Form.Group controlId=\"carddescription\">\n                            <Form.Label>Card description</Form.Label>\n                            <Form.Control type=\"text\" value={editingCard.description} onChange={e => {\n                                handleChangeCardDescription(e.target.value)\n                            }}/>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => {\n                            setShowEditCardModal(false)\n                        }}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={() => handleSaveCard(editingCard.id)}>\n                            Save\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        );\n    } else {\n        return (\n            <Redirect to=\"/login\"/>\n        )\n    }\n}\n","import {Form, Button, Container, Card, Col, Row} from 'react-bootstrap';\nimport {useState} from \"react\";\nimport {callAPI, setCookie} from \"../helpers/api\";\nimport {config} from \"../config\";\nimport {Link} from \"react-router-dom\";\n\nfunction Signup() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repassword, setrePassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [firstname, setFirstName] = useState(\"\");\n    const [lastname, setLastName] = useState(\"\");\n\n    function signupHandler() {\n        /**\n         * password\n         */\n        if(password!== repassword){\n            alert(\"re-password not match!\");\n            return;\n        }\n        if(username===\"\" || password===\"\" || email === \"\" || firstname===\"\" || lastname===\"\"){\n            alert(\"please input field required!\");\n            return;\n        }\n\n        const params = new FormData();\n         params.append('username', username);\n         params.append('password', password);\n         params.append('email', email);\n         params.append('firstname', firstname);\n         params.append('lastname', lastname);\n\n        callAPI('signup', params, function (res) {\n            console.log(res);\n            if (res.success) {\n                window.location.href = \"/login\";\n            } else {\n                alert('Failed');\n            }\n        });\n    }\n\n    return (\n        <Container style={{paddingTop: \"2rem\"}}>\n            <Card style={{padding: \"1rem\", width: \"600px\", margin: \"auto\"}}>\n                <h2 className=\"text-center\">Sign Up</h2>\n                <Form>\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Group controlId=\"username\">\n                                <Form.Label>Username *</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Username\" onChange={e => setUsername(e.target.value)} />\n                            </Form.Group>\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Group controlId=\"password\">\n                                <Form.Label>Password *</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Group controlId=\"repassword\">\n                                <Form.Label>Re-Password *</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Re-password\" onChange={e => setrePassword(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Group controlId=\"email\">\n                                <Form.Label>Email *</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Email\" onChange={e => setEmail(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n\n\n                    <Row>\n                        <Col xs={6}>\n                            <Form.Group controlId=\"firstname\">\n                                <Form.Label>First name *</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"First name\" onChange={e => setFirstName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                        <Col xs={6}>\n                            <Form.Group controlId=\"lastname\">\n                                <Form.Label>Last name *</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Last name\" onChange={e => setLastName(e.target.value)}/>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n\n                    <Button onClick={signupHandler} variant=\"primary\" type=\"button\">Submit</Button>\n                    <Link style={{marginLeft: \"20px\"}} to=\"/login\">Login</Link>\n                </Form>\n            </Card>\n        </Container>\n    );\n}\n\nexport default Signup;\n","import {Form, Button, Container, Card, Col, Row} from 'react-bootstrap';\nimport React, {useEffect, useState} from \"react\";\nimport {callAPI, getCookie, quickCheckToken, setCookie} from \"../helpers/api\";\nimport {config} from \"../config\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport Header from \"./header\";\n\nfunction Account() {\n    const logined = quickCheckToken();\n\n    const [username, setUsername] = useState(\"\");\n    const [oldPassword, setOldPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [firstname, setFirstName] = useState(\"\");\n    const [lastname, setLastName] = useState(\"\");\n\n    useEffect(() => {\n        let mounted = true;\n\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('user_id', getCookie(config.cookie_user_id));\n\n        callAPI('getUserInfo', params, function (res) {\n            if (res.success) {\n                console.log(res);\n                if (mounted) {\n                    setUsername(res.data['username']);\n                    setEmail(res.data['email']);\n                    setFirstName(res.data['first_name']);\n                    setLastName(res.data['last_name']);\n                }\n            }\n        });\n\n        return () => {\n            mounted = false;\n        };\n    },[]);\n\n    function updateAccountHandler() {\n        if(username===\"\" || email === \"\" || firstname===\"\" || lastname===\"\"){\n            alert(\"please input field required!\");\n            return;\n        }\n\n        const params = new FormData();\n        params.append('token', getCookie(config.cookie_name));\n        params.append('username', username);\n        params.append('oldPassword', oldPassword);\n        params.append('newPassword', newPassword);\n        params.append('email', email);\n        params.append('firstname', firstname);\n        params.append('lastname', lastname);\n\n        callAPI('updateUserInfo', params, function (res) {\n            console.log(res);\n            if (res.success && res.data['change_pass']) {\n                alert('Updated info and password!');\n            }else if(res.success && res.old_pass_not_valid) {\n                alert('Updated info! Old password not valid - password not change!');\n            }else if(res.success){\n                alert('Updated info!');\n            } else {\n                alert('Failed');\n            }\n        });\n    }\n    if (logined) {\n        return (\n            <Container fluid>\n            <Header />\n            <Container style={{paddingTop: \"2rem\"}}>\n                <Card style={{padding: \"1rem\", width: \"600px\", margin: \"auto\"}}>\n                    <h2 className=\"text-center\">Account infomation</h2>\n                    <Form>\n                        <Row>\n                            <Col xs={6}>\n                                <Form.Group controlId=\"username\">\n                                    <Form.Label>Username *</Form.Label><br/>\n                                    <Form.Label>{username}</Form.Label>\n                                </Form.Group>\n                            </Col>\n                            <Col xs={6}>\n                                <Form.Group controlId=\"password\">\n                                    <Form.Label>Old Password</Form.Label>\n                                    <Form.Control value={oldPassword} type=\"password\" placeholder=\"Password\" onChange={e => setOldPassword(e.target.value)}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col xs={6}>\n                                <Form.Group controlId=\"email\">\n                                    <Form.Label>Email *</Form.Label>\n                                    <Form.Control value={email} type=\"text\" placeholder=\"Email\" onChange={e => setEmail(e.target.value)}/>\n                                </Form.Group>\n                            </Col>\n                            <Col xs={6}>\n                                <Form.Group controlId=\"password\">\n                                    <Form.Label>New Password</Form.Label>\n                                    <Form.Control value={newPassword} type=\"password\" placeholder=\"Password\" onChange={e => setNewPassword(e.target.value)}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n\n                        <Row>\n                            <Col xs={6}>\n                                <Form.Group controlId=\"firstname\">\n                                    <Form.Label>First name *</Form.Label>\n                                    <Form.Control value={firstname} type=\"text\" placeholder=\"First name\" onChange={e => setFirstName(e.target.value)}/>\n                                </Form.Group>\n                            </Col>\n                            <Col xs={6}>\n                                <Form.Group controlId=\"lastname\">\n                                    <Form.Label>Last name *</Form.Label>\n                                    <Form.Control value={lastname} type=\"text\" placeholder=\"Last name\" onChange={e => setLastName(e.target.value)}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Button onClick={updateAccountHandler} variant=\"primary\" type=\"button\">Change</Button>\n                        <Link style={{marginLeft: \"20px\"}} to=\"/\">Back</Link>\n                    </Form>\n                </Card>\n            </Container>\n            </Container>\n        );\n    } else {\n        return (<Redirect to=\"/login\"/>);\n    }\n}\n\nexport default Account;\n","import Login from \"./components/login\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport {useEffect} from 'react';\nimport {checkTokenValid} from \"./helpers/api\";\nimport {BoardDetail} from \"./components/boardDetail\";\nimport Signup from \"./components/signup\";\nimport Account from \"./components/account\";\n\nfunction App() {\n    useEffect(() => {\n        checkTokenValid();\n    });\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/login\"><Login/></Route>\n                <Route path=\"/detail/:id\" component={BoardDetail} />\n                <Route path=\"/signup\" component={Signup} />\n                <Route path=\"/account\" component={Account} />\n                <Route path=\"/\"><Home/></Route>\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}